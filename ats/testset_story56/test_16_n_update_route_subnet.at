## This test ensures that user can update gateway IP, and catch if there is a conflict with non-default route

runLitpScript ../custom_setup.inc

#Setup required items for test
litp create -t network -p /infrastructure/networking/networks/traffic1 -o subnet='172.16.100.0/24' litp_management='false' name='traffic1'

litp create -t route -p /infrastructure/networking/routes/traffic2_gw -o subnet='172.16.168.2/32' gateway='172.16.100.130'
litp inherit -p /deployments/d1/clusters/c1/nodes/n1/routes/r1 -s /infrastructure/networking/routes/traffic2_gw
litp inherit -p /deployments/d1/clusters/c1/nodes/n2/routes/r1 -s /infrastructure/networking/routes/traffic2_gw

litp create -t eth -p /deployments/d1/clusters/c1/nodes/n1/network_interfaces/if4 -o macaddress='00:50:56:00:00:75' ipaddress='172.16.100.2' network_name='traffic1' device_name='eth4'
litp create -t eth -p /deployments/d1/clusters/c1/nodes/n2/network_interfaces/if4 -o macaddress='00:50:56:00:00:79' ipaddress='172.16.100.3' network_name='traffic1' device_name='eth4'

#Make sure the model is valid
litp create_plan
assertPlanState initial

#update network 'subnet' property
litp update -p /infrastructure/networking/networks/traffic1 -o subnet='20.20.20.0/24'

#update route 'gateway' and 'subnet' properties
litp update -p /infrastructure/networking/routes/traffic2_gw -o gateway='192.108.55.77' subnet='22.22.22.0/24'

#update interface 'ipaddress' property
litp update -p /deployments/d1/clusters/c1/nodes/n1/network_interfaces/if4 -o ipaddress=20.20.20.78

litp update -p /deployments/d1/clusters/c1/nodes/n2/network_interfaces/if4 -o ipaddress=20.20.20.79

#assert ValidationError with expected message is present
let __err_a --err_type ValidationError --err_message 'Create plan failed: Route gateway is not reachable from any of the interfaces on node "node1"' --err_vpath '/deployments/d1/clusters/c1/nodes/n1/routes/r1'
let __err_b --err_type ValidationError --err_message 'Create plan failed: Route gateway is not reachable from any of the interfaces on node "node2"' --err_vpath '/deployments/d1/clusters/c1/nodes/n2/routes/r1'

assertError __err_a __err_b create_plan
